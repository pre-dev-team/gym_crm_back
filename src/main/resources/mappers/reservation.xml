<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.predev.gymcrm.repository.ReservationMapper">

    <resultMap id="ReservationResultMap" type="com.predev.gymcrm.entity.Reservation">
        <id property="reservationId" column="reservation_id" />
        <result property="userId" column="user_id" />
        <result property="trainerId" column="trainer_id" />
        <result property="timeId" column="time_id" />
        <result property="reservationDate" column="reservation_date" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="time" resultMap="TimeResultMap" />
        <association property="user" resultMap="UserResultMap" />
        <association property="trainer" resultMap="TrainerResultMap" />
    </resultMap>

    <resultMap id="UserResultMap" type="com.predev.gymcrm.entity.User">
        <id property="userId" column="user_id" />
        <result property="accountId" column="account_id" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="account" resultMap="AccountResultMap"/>
    </resultMap>

    <resultMap id="TrainerResultMap" type="com.predev.gymcrm.entity.Trainer">
        <id property="trainerId" column="trainer_id" />
        <result property="accountId" column="account_id" />
        <result property="trainerProfileImgUrl" column="trainer_profile_img_url" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="account" resultMap="AccountResultMap"/>
    </resultMap>

    <resultMap id="AccountResultMap" type="com.predev.gymcrm.entity.Account">
        <id property="accountId" column="account_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
    </resultMap>

    <resultMap id="TimeResultMap" type="com.predev.gymcrm.entity.Time">
        <id property="timeId" column="time_id" />
        <result property="timeDuration" column="time_duration" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
    </resultMap>

    <resultMap id="ScheduleResultMap" type="com.predev.gymcrm.entity.Reservation">
        <id property="reservationId" column="reservation_id"/>
        <result property="userId" column="user_id"/>
        <result property="trainerId" column="trainer_id"/>
        <result property="timeId" column="time_id"/>
        <result property="reservationDate" column="reservation_date"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>


    <insert id="saveReservation"
            parameterType="com.predev.gymcrm.entity.Reservation"
    >
        insert into
            reservation_tb
        values
            (0, #{userId}, #{trainerId}, #{timeId}, #{reservationDate}, now(), now());
    </insert>


    <select id="getAllReservation"
            resultType="com.predev.gymcrm.entity.Reservation"
            resultMap="ReservationResultMap"
    >
        select
            rvt.reservation_id,
            rvt.user_id,
            rvt.trainer_id,
            rvt.time_id,
            rvt.reservation_date,
            rvt.create_date,
            rvt.update_date,
            tt.time_duration
        from
            reservation_tb rvt
            left outer join time_tb tt on (tt.time_id = rvt.time_id)
    </select>

    <select id="getAllReservationUser"
            resultType="com.predev.gymcrm.entity.Reservation"
            resultMap="ReservationResultMap"
    >
        select
            rt.reservation_id,
            tt1.trainer_id,
            rt.user_id,
            rt.time_id,
            rt.reservation_date,
            tt2.time_duration
        from
            account_tb at
            left outer join trainer_tb tt1 on(tt1.account_id = at.account_id)
            left outer join reservation_tb rt on(rt.trainer_id = tt1.trainer_id)
            left outer join user_tb ut on(ut.user_id = rt.user_id)
            left outer join time_tb tt2 on(tt2.time_id = rt.time_id)

        where
            at.account_id = #{accountId};
    </select>

    <select id="findReservationByAccountId"
            resultType="com.predev.gymcrm.entity.Reservation"
            resultMap="ReservationResultMap"
    >
        select
            rvt.reservation_id,
            rvt.user_id,
            rvt.trainer_id,
            rvt.time_id,
            rvt.reservation_date,
            rvt.create_date,
            rvt.update_date,
            tt.time_duration
        from
            reservation_tb rvt
            left outer join time_tb tt on (tt.time_id = rvt.time_id)
            left outer join user_tb ut on (ut.user_id = rvt.user_id)
            left outer join trainer_tb tit on (tit.trainer_id = rvt.trainer_id)
            left outer join account_tb at on(at.account_id = tit.account_id)
        where
            at.account_id = #{accountId}
    </select>



    <select id="findReservationsByUserId" parameterType="integer" resultMap="ReservationResultMap">
        select
            rt.reservation_id,
            rt.reservation_date,
            rt.user_id,
            rt.trainer_id,
            tt1.time_id,
            tt1.time_duration,
            tt2.account_id,
            at.name
        from
            reservation_tb rt
            left outer join time_tb tt1 on(tt1.time_id = rt.time_id)
            left outer join trainer_tb tt2 on(tt2.trainer_id = rt.trainer_id)
            left outer join account_tb at on(tt2.account_id = at.account_id)
        where
            user_id = #{userId}
    </select>

    <select id="findReservationByDate" resultMap="ReservationResultMap">
        select
            reservation_id,
            user_id,
            trainer_id,
            time_id,
            reservation_date,
            create_date,
            update_date
        from
            reservation_tb
        where
            reservation_date = #{reservationDate}
            <if test="trainerId != 0">
                and trainer_id = #{trainerId}
            </if>
            <if test="userId != 0">
                and user_id = #{userId}
            </if>
    </select>

    <select id="findTrainerByDay" resultMap="TrainerResultMap">
        select
            tt.trainer_id,
            tt.trainer_profile_img_url,
            tt.account_id,
            at.name,
            rt.reservation_date,
            rt.time_id
        from
            trainer_tb tt
            left outer join account_tb at on(tt.account_id = at.account_id)
            left outer join reservation_tb rt on(tt.trainer_id = rt.trainer_id)
            and reservation_date = #{reservationDate}
            and time_id = #{timeId}
        where
            time_id is null
    </select>

    <select id="getTodayReservation"
            resultMap="ReservationResultMap"
    >
        SELECT
            rst.reservation_id,
            trainer_id,
            ut.user_id,
            rst.time_id,
            ttb.time_duration
        FROM
            reservation_tb rst
            LEFT OUTER JOIN user_tb ut ON (ut.user_id = rst.user_id)
            LEFT OUTER JOIN time_tb ttb ON (rst.time_id = ttb.time_id)
        WHERE
            rst.trainer_id = #{trainerId}
            AND rst.reservation_date = #{today}
    </select>

    <select id="findReservationCountByUserId"
            resultType="int"
    >
        select
            count(user_id)
        from
            reservation_tb
        where
            user_id = #{userId}
    </select>
    <select id="findMemberCountOfTrainerByTrainerId"
            resultType="int"
    >
        select
            count(*) member_count
        from
            (
                select
                    *
                from
                    reservation_tb
                where
                    trainer_id = #{trainerId}
                group by
                    user_id
            ) as reservation_member_count

    </select>
    <select id="findReservationByNameAndPeriod"
            resultMap="ReservationResultMap">
        <choose>
            <when test="searchType == 1">
                select
                    rt.reservation_id,
                    rt.trainer_id,
                    rt.user_id,
                    ut.account_id,
                    at.username,
                    at.name,
                    rt.time_id,
                    tit.time_duration,
                    rt.reservation_date
                from
                    reservation_tb rt
                left outer join
                    time_tb tit	on (tit.time_id = rt.time_id)
                left outer join
                    user_tb ut on (ut.user_id = rt.user_id)
                left outer join
                    account_tb at on (at.account_id = ut.account_id)
                where
                    reservation_date between #{startDate} and #{endDate}
                    and at.name like concat('%', #{name}, '%')
            </when>
            <when test="searchType == 2">
                select
                    rt.reservation_id,
                    rt.trainer_id,
                    rt.user_id,
                    tt.account_id,
                    at.username,
                    at.name,
                    rt.time_id,
                    tit.time_duration,
                    rt.reservation_date
                from
                    reservation_tb rt
                left outer join
                    time_tb tit	on (rt.time_id = tit.time_id)
                left outer join
                    trainer_tb tt on (tt.trainer_id = rt.trainer_id)
                left outer join
                    account_tb at on (at.account_id = tt.account_id)
                where
                    reservation_date between #{startDate} and #{endDate}
                    and name like concat('%', #{name}, '%')
            </when>
        </choose>
    </select>


</mapper>