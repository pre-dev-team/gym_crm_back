<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.predev.gymcrm.repository.AuthMapper">

    <!--###################       RESULT_MAP       ###################    -->

    <resultMap id="RoleResultMap" type="com.predev.gymcrm.entity.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleNameKor" column="role_name_kor" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
    </resultMap>

    <resultMap id="AccountResultMap" type="com.predev.gymcrm.entity.Account">
        <id property="accountId" column="account_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <association property="role" resultMap="RoleResultMap" />
    </resultMap>
    <resultMap id="OAuth2ResultMap" type="com.predev.gymcrm.entity.OAuth2">
        <id property="oAuth2Id" column="oauth2_id" />
        <result property="oAuth2Name" column="oauth2_name"/>
        <result property="accountId" column="account_id" />
        <result property="oAuth2ProviderName" column="oauth2_provider_name" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
    </resultMap>

    <resultMap id="UserResultMap" type="com.predev.gymcrm.entity.User">
        <id property="userId" column="user_id" />
        <result property="accountId" column="account_id" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="account" resultMap="AccountResultMap" />
    </resultMap>

    <resultMap id="TrainerResultMap" type="com.predev.gymcrm.entity.Trainer">
        <id property="trainerId" column="user_id" />
        <result property="accountId" column="account_id" />
        <result property="trainerProfileImgUrl" column="trainer_profile_img_url" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="account" resultMap="AccountResultMap"/>
    </resultMap>

    <!--###################       INSERT       ###################    -->

    <insert
            id="saveAccount"
            keyProperty="account.accountId"
            useGeneratedKeys="true"
    >
        insert into
            account_tb
        values
            (0, #{roleId}, #{account.username}, #{account.password}, #{account.name}, #{account.phone}, #{account.email}, now(), now())
    </insert>

    <insert id="saveUser">
        insert into
            user_tb
        values
            (0, #{accountId}, now(), now())
    </insert>

    <insert id="saveTrainer">
        insert into
            trainer_tb
        values
            (0, #{accountId}, null, now(), now())
    </insert>

    <update id="modifyAccountPassword" parameterType="com.predev.gymcrm.entity.Account">
        update
            account_tb
        set
            password = #{password},
            update_date = now()
        where
            account_id = #{accountId}
    </update>

    <delete id="deleteTrainer" parameterType="integer">
        delete from
            trainer_tb
        where
            trainer_id = #{trainerId}
    </delete>

    <!--###################       SELECT       ###################    -->

    <select
            id="findAccountByUsername"
            parameterType="string"
            resultMap="AccountResultMap"
    >
        select
            at.account_id,
            at.role_id,
            at.username,
            at.password,
            at.name,
            at.phone,
            at.email,
            at.create_date,
            at.update_date,
            rt.role_name,
            rt.role_name_kor,
            oat.oauth2_id,
            oat.oauth2_name,
            oat.oauth2_provider_name
        from
            account_tb at
            left outer join role_tb rt on(at.role_id = rt.role_id)
            left outer join oauth2_tb oat on(oat.account_id=at.account_id)
        where
            at.username = #{username}
    </select>

    <select
            id="findAccountByPhone"
            resultType="com.predev.gymcrm.entity.Account"
            resultMap="AccountResultMap"
    >
        select
            at.account_id,
            at.username,
            at.password,
            at.name,
            at.phone,
            at.email,
            at.create_date,
            at.update_date,
            at.role_id,
            rt.role_name,
            rt.role_name_kor
        from
            account_tb at
            left outer join role_tb rt on(at.role_id = rt.role_id)
        where
            at.phone = #{phone}
    </select>
    <select id="findAccountByAccountId"
            resultMap="AccountResultMap">
        select
            account_id,
            role_id,
            username,
            password,
            name,
            phone,
            email,
            create_date,
            update_date
        from
            account_tb
        where
            account_id = #{accountId}
    </select>

    <select id="findAccountByUserId" resultType="com.predev.gymcrm.entity.Account">
        select
            ut.user_id,
            at.account_id,
            at.role_id,
            at.username,
            at.password,
            at.name,
            at.phone,
            at.email,
            at.create_date,
            at.update_date
        from
            user_tb ut
            left outer join account_tb at on(at.account_id = ut.account_id)
        where
            user_id = #{userId}
    </select>

    <select id="findAccountByTrainerId" resultMap="AccountResultMap">
        select
            at.account_id,
            at.role_id,
            at.username,
            at.password,
            at.name,
            at.phone,
            at.email,
            at.create_date,
            at.update_date
        from
            trainer_tb tt
            left outer join account_tb at on(at.account_id = tt.account_id)
        where
            trainer_id = #{trainerId}
    </select>

    <select id="findUserIdByAccountId" resultType="java.lang.Integer">
        select
            user_id
        from
            user_tb
        where
            account_id = #{accountId}
    </select>

    <select id="findTrainerIdByAccountId" resultType="java.lang.Integer">
        select
            trainer_id
        from
            trainer_tb
        where
            account_id = #{accountId}
    </select>

    <select id="findUsersByName" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.account_id,
            at.username,
            at.name,
            at.phone,
            at.email
        from
            user_tb ut
            left outer join account_tb at on(at.account_id = ut.account_id)
        where
            1 = 1
            <if test="name != null and name != ''">
                and at.name like concat('%', #{name}, '%')
            </if>

   </select>
    <select id="findAccountByOAuth2Name" resultMap="AccountResultMap">
        select
            at.account_id,
            at.username,
            at.password,
            at.name,
            at.phone,
            at.email,
            at.create_date,
            at.update_date,
            rt.role_id,
            rt.role_name,
            rt.role_name_kor,
            oat.oauth2_id,
            oat.oauth2_name,
            oat.oauth2_provider_name
        from
            account_tb at
            left outer join role_tb rt on (rt.role_id = at.role_id)
            left outer join oauth2_tb oat on (oat.account_id = at.account_id)
        where
            oat.oauth2_name = #{oauth2Name};
    </select>

    <insert id="saveOAuth2" parameterType="com.predev.gymcrm.entity.OAuth2">
        insert into oauth2_tb
        values(0, #{oauth2Name}, #{accountId}, #{oauth2ProviderName}, now(), now())
    </insert>

    <select id="findAccountByNameAndEmail" resultMap="AccountResultMap">
        select
            account_id,
            role_id,
            username,
            name,
            email
        from
            account_tb
        where
            name = #{name}
            and email = #{email}
    </select>

    <select id="findAccountByUserNameAndEmail" resultMap="AccountResultMap">
        select
            account_id,
            role_id,
            username,
            name,
            email
        from
            account_tb
        where
            username = #{username}
            and email = #{email}
    </select>


</mapper>