<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.predev.gymcrm.repository.UserMapper">
    <resultMap id="RoleResultMap" type="com.predev.gymcrm.entity.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleNameKor" column="role_name_kor" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
    </resultMap>

    <resultMap id="RoleRegisterResultMap" type="com.predev.gymcrm.entity.RoleRegister">
        <id property="roleRegisterId" column="role_user_register_id" />
        <result property="roleId" column="role_id" />
        <result property="userId" column="user_id" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="role" resultMap="RoleResultMap" />
    </resultMap>

    <resultMap id="UserResultMap" type="com.predev.gymcrm.entity.User">
        <id property="userId" column="user_id" />
        <result property="userUsername" column="user_username" />
        <result property="userPassword" column="user_password" />
        <result property="userName" column="user_name" />
        <result property="userPhone" column="user_phone" />
        <result property="userEmail" column="user_email" />
        <collection property="roleRegisters" javaType="list" resultMap="RoleRegisterResultMap" />
    </resultMap>

    <insert
            id="saveUser"
            parameterType="com.predev.gymcrm.entity.User"
            keyProperty="userId"
            useGeneratedKeys="true"
    >
        insert into user_tb
        values(0, #{userUsername}, #{userPassword}, #{userName}, #{userPhone}, #{userEmail}, now(), now())
    </insert>



    <select id="findRoleRegisterByUserIdAndRoleId" resultMap="RoleRegisterResultMap">
        select
            rrt.role_register_id,
            rrt.user_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor,
            rrt.create_date,
            rrt.update_date
        from
            role_register_tb rrt
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
        where
            rrt.user_id = #{userId}
            and rrt.role_id = #{roleId}

    </select>

    <insert id="saveRole">
        insert into role_user_register_tb
        values(0, #{userId}, #{roleId}, now(), now())
    </insert>


    <select
            id="findUserByUsername"
            parameterType="string"
            resultMap="UserResultMap"
    >
        select
            ut.user_id,
            ut.user_username,
            ut.user_password,
            ut.user_name,
            ut.user_phone,
            ut.user_email,
            ut.create_date,
            ut.update_date,
            rrt.role_user_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor
        from
            user_tb ut
            left outer join role_user_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
        where
            ut.user_username = #{userUsername}

    </select>

 <!--   <select id="findUsersByName" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.user_username,
            ut.user_password,
            ut.user_name,
            ut.user_phone,
            ut.user_email,
            ut.create_date,
            ut.update_date,
            rrt.role_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor
        from
            user_tb ut
            left outer join role_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
        where
            1 = 1
            예시: 사용자 이름이 특정 문자열을 포함하는 경우
            <if test="searchUserName != null and searchUserName != ''">
                and ut.user_name like concat('%', #{searchUserName}, '%')
            </if>
            <!- 권한 이름이 특정 문자열을 포함하는 경우
            <if test="searchRoleNameKor != null and searchRoleNameKor != ''">
                and rt.role_name_kor like concat('%', #{searchRoleNameKor}, '%')
            </if>
                                   db명 수정으로 추후 바꿀 예정입니다.
    </select>-->


</mapper>