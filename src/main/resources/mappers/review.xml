<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.predev.gymcrm.repository.ReviewMapper">

    <resultMap id="UserResultMap" type="com.predev.gymcrm.entity.User">
        <id property="userId" column="user_id" />
        <result property="accountId" column="account_id" />
    </resultMap>

    <resultMap id="AccountResultMap" type="com.predev.gymcrm.entity.Account">
        <id property="accountId" column="account_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
    </resultMap>

    <resultMap id="TrainerResultMap" type="com.predev.gymcrm.entity.Trainer">
        <id property="trainerId" column="trainer_id" />
        <result property="accountId" column="account_id" />
        <result property="trainerProfileImgUrl" column="trainer_profile_img_url" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <association property="account" resultMap="AccountResultMap"/>
    </resultMap>

    <resultMap id="ReviewResultMap" type="com.predev.gymcrm.entity.TrainerReview">
        <id property="trainerReviewId" column="trainer_review_id"/>
        <result property="trainerId" column="trainer_id"/>
        <result property="userId" column="user_id"/>
        <result property="trainerReviewText" column="trainer_review_text"/>
        <result property="trainerReviewScore" column="trainer_review_score"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <association property="trainer" resultMap="TrainerResultMap" />
        <association property="trainerAccountView" resultMap="TrainerAccountViewResultMap" />
        <association property="userAccountView" resultMap="UserAccountViewResultMap" />
    </resultMap>

    <resultMap id="UserAccountViewResultMap" type="com.predev.gymcrm.entity.UserAccountView">
        <id property="accountId" column="account_id" />
        <result property="userId" column="user_id" />
        <result property="roleId" column="role_id" />
        <result property="username" column="username" />
        <result property="name" column="name" />
        <result property="password" column="password" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
    </resultMap>

    <resultMap id="TrainerAccountViewResultMap" type="com.predev.gymcrm.entity.TrainerAccountView">
        <id property="accountId" column="account_id" />
        <result property="trainerId" column="trainer_id" />
        <result property="roleId" column="role_id" />
        <result property="username" column="username" />
        <result property="name" column="name" />
        <result property="password" column="password" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
    </resultMap>
    <!-- 트레이너 리뷰 삽입 쿼리 -->
    <insert id="insertTrainerReview" parameterType="com.predev.gymcrm.entity.TrainerReview">
        INSERT INTO
            trainer_review_tb
        VALUES
            (0, #{trainerId}, #{userId}, #{trainerReviewText}, #{trainerReviewScore}, now(), now())
    </insert>

    <!-- 특정 트레이너의 리뷰를 조회하는 쿼리 -->
    <select
            id="findReviewsByTrainerId"
            parameterType="int"
            resultMap="ReviewResultMap">
        SELECT
            trt.trainer_review_id,
            trt.trainer_id,
            trt.user_id,
            trt.trainer_review_text,
            trt.trainer_review_score,
            at.username,
            trt.create_date,
            trt.update_date
        FROM
            trainer_review_tb trt
            left outer join user_tb ut on(ut.user_id = trt.user_id)
            left outer join account_tb at on(at.account_id = ut.account_id)
        WHERE
            trainer_id = #{trainerId}
    </select>

    <select id="findTopRatedReviews" resultType="com.predev.gymcrm.entity.TopRatedReview">
        select
            *
        from
            (
                select
                    row_number() over(partition by trt.trainer_id order by trt.trainer_review_score desc, trt.update_date desc) rankNumber,
                    trt.trainer_review_id as trainerReviewId,
                    trt.user_id as userId,
                    uav.username as username,
                    trt.trainer_review_score as trainerReviewScore,
                    trt.trainer_review_text as trainerReviewText,
                    tav.name as trainerName,
                    tav.trainer_profile_img_url as trainerProfileImgUrl,
                    top3.review_count as reviewCount
                from
                    trainer_review_tb trt
                    left outer join trainer_account_view tav
                        on(trt.trainer_id = tav.trainer_id)
                    left outer join user_account_view uav
                        on(trt.user_id = uav.user_id)
                    left outer join
                                    (
                                        select
                                            trainer_id,
                                            count(*) as review_count
                                        from
                                            trainer_review_tb
                                        group by
                                            trainer_id
                                        order by
                                            review_count desc
                                        limit 3) top3
                        on(top3.trainer_id = tav.trainer_id and top3.review_count > 0)
            ) top_review
        where
            rankNumber = 1
        order by
            trainerReviewScore desc
        limit 3
    </select>
    <select id="findReviewsByUserAccountId" resultMap="ReviewResultMap">
        select
            trt.trainer_review_id,
            trt.trainer_id,
            trt.user_id,
            trt.trainer_review_text,
            trt.trainer_review_score,
            tav.name,
            tav.trainer_profile_img_url,
            trt.create_date
        from
            trainer_review_tb trt
            left outer join trainer_account_view tav
                on(trt.trainer_id = tav.trainer_id)
            left outer join user_account_view uav
                on(trt.user_id = uav.user_id)
        where
            uav.account_id = #{accountId}
    </select>
    <select id="findReviewsByUserId" resultType="com.predev.gymcrm.entity.TrainerReview">
        select
            trt.trainer_review_id,
            trt.trainer_id,
            trt.user_id,
            trt.trainer_review_text,
            trt.trainer_review_score,
            tav.name,
            tav.trainer_profile_img_url,
            trt.create_date
        from
            trainer_review_tb trt
            left outer join trainer_account_view tav
                on(trt.trainer_id = tav.trainer_id)
            left outer join user_account_view uav
                on(trt.user_id = uav.user_id)
        where
            uav.user_id = #{userId}
    </select>


</mapper>